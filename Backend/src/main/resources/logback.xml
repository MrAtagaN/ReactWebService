<?xml version="1.0" encoding="UTF-8"?>

<configuration scan="true" scanPeriod="30 seconds">


    <property name="logs_dir" value="logs"/>
    <property name="logs_archive_dir" value="logs/archived"/>


    <!-- вывод всех логов в файл -->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logs_dir}/react-web-service.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${logs_archive_dir}/react-web-service.%d{yyyy-MM-dd}.%i.zip</fileNamePattern>
            <maxFileSize>2GB</maxFileSize>
            <maxHistory>7</maxHistory>
            <totalSizeCap>5GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern><![CDATA[
            %d{yyyy-MM-dd HH:mm:ss.SSS} %-6level RqUID[%X{uid}] %logger: %replace(%msg){'((?<=\W)(\d{9,15})(?=\d{4}\W))|((?<=LastName\W{1,2}[А-Я]{1})([а-яА-я]+)(?=\W))|((?<=Passport\W{1,2}\d{2})\d{2}\s\d{2}(?=\d{4}\W))', 'xxxx'}%n%ex{full}]]></pattern>
        </encoder>
    </appender>

    <!-- вывод ошибок отдельный в файл -->
    <appender name="file-errors" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${logs_dir}/react-web-service-errors.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${logs_archive_dir}/react-web-service-errors.%d{yyyy-MM-dd}.%i.zip</fileNamePattern>
            <maxFileSize>1GB</maxFileSize>
            <maxHistory>7</maxHistory>
            <totalSizeCap>2GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-6level %logger: %msg %n%ex{full}</pattern>
        </encoder>
    </appender>

    <!-- вывод в консоль -->
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern><![CDATA[
            %d{yyyy-MM-dd HH:mm:ss.SSS} %-6level RqUID[%X{uid}] %logger: %replace(%msg){'((?<=\W)(\d{9,15})(?=\d{4}\W))|((?<=LastName\W{1,2}[А-Я]{1})([а-яА-я]+)(?=\W))|((?<=Passport\W{1,2}\d{2})\d{2}\s\d{2}(?=\d{4}\W))', 'xxxx'}%n%ex{full}]]></pattern>
        </encoder>
    </appender>

    <!-- вывод в консоль  -->
    <appender name="consoleAsync" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="stdout"/>
    </appender>


    <!-- Логирование приложения -->
    <logger name="com.plekhanov.react_web_service" level="trace" additivity="false">
        <appender-ref ref="file"/>
        <appender-ref ref="consoleAsync"/>
    </logger>

    <!---->

    <root level="info">
        <appender-ref ref="file"/>
        <appender-ref ref="consoleAsync"/>
        <appender-ref ref="file-errors"/>
    </root>



</configuration>
